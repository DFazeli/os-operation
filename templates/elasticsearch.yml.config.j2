---
# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
cluster.name: {{general_config.cluster_name}}
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#

{% if general_config.cluster_status == true %}
{% for host in elasticsearch_nodes %}{% if ansible_env.SSH_CONNECTION.split(' ')[2] == elasticsearch_nodes[host].ssh_ip %}node.name: {{ elasticsearch_nodes[host].hostname }}{{ elasticsearch_nodes[host].id }}{% endif %}{% endfor %}
{% else %}
node.name: {{ elasticsearch_nodes.node1.hostname|lower }}{{ elasticsearch_nodes.node1.id }}
{% endif %}

{% if general_config.cluster_status == true %}
{% for host in elasticsearch_nodes %}{% if ansible_env.SSH_CONNECTION.split(' ')[2] == elasticsearch_nodes[host].ssh_ip %}node.master: {{elasticsearch_nodes[host].master_node|lower}}{% endif %}{% endfor %}
{% else %}
node.master: {{ elasticsearch_nodes.node1.master_node|lower }}
{% endif %}

{% if general_config.cluster_status == true %}
{% for host in elasticsearch_nodes %}{% if ansible_env.SSH_CONNECTION.split(' ')[2] == elasticsearch_nodes[host].ssh_ip %}node.data: {{ elasticsearch_nodes[host].data_node|lower }}{% endif %}{% endfor %}
{% else %}
node.data: {{ elasticsearch_nodes.node1.data_node|lower }}
{% endif %}

{% if general_config.cluster_status == true %}
{% for host in elasticsearch_nodes %}{% if ansible_env.SSH_CONNECTION.split(' ')[2] == elasticsearch_nodes[host].ssh_ip%}node.ingest: {{ elasticsearch_nodes[host].ingest_node|lower }}{% endif %}{% endfor %}
{% else %}
node.ingest: {{ elasticsearch_nodes.node1.ingest_node|lower }}
{% endif %}


#node.client: true
#node.data: false
#
# Add custom attributes to the node:
#
#node.attr.rack: r1
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
path.data: {{ general_config_elasticsearch.path_data }}
#
# Path to log files:
#
path.logs: {{ general_config_elasticsearch.path_log }}
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
#bootstrap.memory_lock: true
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
{% if general_config.cluster_status == true %}
{% for host in elasticsearch_nodes %}{% if ansible_env.SSH_CONNECTION.split(' ')[2] == elasticsearch_nodes[host].ssh_ip%}
network.host: {{ elasticsearch_nodes[host].internal_ip }}
transport.host: {{ elasticsearch_nodes[host].internal_ip }}
transport.tcp.port: {{ elasticsearch_nodes[host].transport_tcp_port }}
{% endif %}
{% endfor %}
{% else %}
network.host: {{ elasticsearch_nodes.node1.internal_ip }}
transport.host: {{ elasticsearch_nodes.node1.internal_ip }}
{% endif %}

#
# Set a custom port for HTTP:
#

{% if general_config.cluster_status == true %}
{% for host in elasticsearch_nodes %}{% if ansible_env.SSH_CONNECTION.split(' ')[2] == elasticsearch_nodes[host].ssh_ip %}
http.port: {{ elasticsearch_nodes[host].http_port }}{% endif %}{% endfor %}
{% else %}
http.port: {{ elasticsearch_nodes.node1.http_port }}
{% endif %}

# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when new node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
#discovery.zen.ping.multicast.enabled: false


{% if general_config.cluster_status == true %}
discovery.zen.ping.unicast.hosts: ["127.0.0.1", {% for host in elasticsearch_nodes %}"{{elasticsearch_nodes[host].internal_ip}}"{% if not loop.last %}, {% endif %}{% endfor %}]
{% else %}
discovery.zen.ping.unicast.hosts: ["127.0.0.1","{{ elasticsearch_nodes.node1.internal_ip }}"]
{% endif %}


#
# Prevent the "split brain" by configuring the majority of nodes (total number of master-eligible nodes / 2 + 1):
#
#discovery.zen.minimum_master_nodes: 3
#
# For more information, consult the zen discovery module documentation.
#
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
#gateway.recover_after_nodes: 3
#
# For more information, consult the gateway module documentation.
#
# ---------------------------------- Various -----------------------------------
#
# Require explicit names when deleting indices:
#
#action.destructive_requires_name: true

